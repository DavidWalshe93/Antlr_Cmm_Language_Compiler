
#source	"high-level-1.txt"

	' * Global variables
	' * [8,[3,int]] fibonacci (offset 0)

' Invocation to the main function
call main
halt


#line	3
 p:
	' * Parameters:
	' * Local variables:
	enter	0
	ret	0, 0, 0

#line	5
 f:
	' * Parameters:
	' * double r (offset 6)
	' * int e (offset 4)
	' * Local variables:
	' * double real (offset -4)
	' * char c (offset -5)
	' * int result (offset -7)
	enter	7

#line	9
	' * Assignment
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	6
	addi
	loadf
	pushf	10.0
	mulf
	storef

#line	10
	' * Assignment
	push	bp
	pushi	-5
	addi
	pushb	48
	storeb

#line	11
	' * If Statement
	' * If Conditional
	push	bp
	pushi	4
	addi
	loadi
	pushi	256
	lti
	jz	label0
	' * If Body

#line	12
	' * Assignment
	push	bp
	pushi	-5
	addi
	push	bp
	pushi	4
	addi
	loadi
	i2b
	storeb

#line	13
	' * Assignment
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-5
	addi
	loadb
	b2i
	storei
	jmp	label1
 label0:

#line	16
	' * Else Body

#line	16
	' * Assignment
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-4
	addi
	loadf
	f2i
	storei
 label1:

#line	17
	' * Return
	push	bp
	pushi	-7
	addi
	loadi
	ret	2, 7, 6

#line	20
 initialize:
	' * Parameters:
	' * Local variables:
	' * int i (offset -2)
	enter	2

#line	22
	' * Assignment
	pusha	0
	pushi	0
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pushi	0
	storei

#line	23
	' * Assignment
	pusha	0
	pushi	0
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	1
	storei

#line	24
	' * Assignment
	pusha	0
	pushi	0
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pushi	1
	storei

#line	25
	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	1
	storei

#line	26
	' * While Loop
 label2:
	' * While Conditional
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz	label3
	' * While Body

#line	27
	' * Assignment
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	storei

#line	28
	' * Assignment
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	storei

#line	29
	' * Assignment
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	addi
	storei

#line	30
	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	label2
 label3:
	ret	0, 2, 0

#line	35
 main:
	' * Parameters:
	' * Local variables:
	' * int i (offset -2)
	' * int j (offset -4)
	' * char ch (offset -5)
	enter	5

#line	39
	call	p

#line	40
	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	41
	' * Assignment
	push	bp
	pushi	-5
	addi
	pushb	48
	storeb

#line	44
	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	i2f
	push	bp
	pushi	-5
	addi
	loadb
	b2i
	call	f
	outi

#line	45
	' * Write
	pushb	10
	outb

#line	47
	pushf	1.3
	pushi	2
	call	f
	popi

#line	49
	call	initialize

#line	50
	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	51
	' * While Loop
 label4:
	' * While Conditional
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz	label5
	' * While Body

#line	53
	' * Write
	pushb	40
	outb

#line	54
	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	outi

#line	55
	' * Write
	pushb	41
	outb

#line	56
	' * Write
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	outi

#line	57
	' * Write
	pushb	43
	outb

#line	58
	' * Write
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	outi

#line	59
	' * Write
	pushb	61
	outb

#line	60
	' * Write
	pusha	0
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	outi

#line	61
	' * Write
	pushb	10
	outb

#line	62
	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	label4
 label5:
	ret	0, 5, 0
